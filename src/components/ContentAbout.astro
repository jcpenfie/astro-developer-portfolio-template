---
import { Code } from 'astro:components';

const code = `interface Developer {
    name: string;
    skills: string[];
    interests: string[];
};

interface TechStack {
    devOps: string[];
    backend: string[];
   frontend: string[];
};

type ContactType = 'github' | 'youtube' | 'linkedIn' | 'linktree';;

const techStack: TechStack = {
    devOps: [
        'GitLab',
        'GitHub',
        'Docker',
        'Jenkins'
    ],
    frontend: [
        'React',
        'Angular',
        'JavaScript',
        'TypeScript',
        'Laravel',
        'TailwindCSS',
        'Bootstrap',
        'PrimeNG',
        'Astro',
        'SCSS',
        'Markdown',
        'WordPress',
        'Kotlin Multiplatform'
    ],
    backend: [
        'Java',
        'Spring Boot',
        'JHipster',
        'Supabase',
        'Node.js',
        'JPA',
        'Swagger',
        'PostgreSQL',
        'MySQL',
        'Astro',
        'Python'
    ]
};

// Developer profile
const me: Developer = {
    name: 'Juan Carlos',
    skills: [
        ...techStack.devOps,
        ...techStack.backend,
        ...techStack.frontend
    ],
    interests: [
        'Open Source',
        'Security',
        'Privacy',
        'Performance',
        'Self-Learning',
        'Networking'
    ]
};

// Contact function
const contact = (type: ContactType): string => {
    switch (type) {
        case 'github':
            return 'https://github.com/jcpenfie';
        case 'youtube':
            return 'https://www.youtube.com/@JohnnyFinchDev';
        case 'linkedIn':
            return 'https://www.linkedin.com/in/dejan-vi';
        case 'linktree':
            return 'https://linktr.ee/jcpenfie';
        default:
            return 'Send hugs';
    }
};

`;
---

<Code
    code={code}
    lang="js"
    wrap={true}
/>

<style is:global>

    /* Custom styling for code block line numbers */
    pre.astro-code {
        @apply bg-transparent !important;
    }

    pre.astro-code code {
        @apply block;
        counter-reset: step;
        counter-increment: step 0;
    }

    pre.astro-code code .line {
        @apply relative;
    }

    pre.astro-code code .line::before {
        content: counter(step);
        counter-increment: step;
        @apply text-gray-600 pr-2;
    }

</style>